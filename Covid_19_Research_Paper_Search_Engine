{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5876b302",
   "metadata": {},
   "source": [
    "### **Spark**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4d74d427",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pyspark in /opt/anaconda3/lib/python3.9/site-packages (3.4.0)\n",
      "Requirement already satisfied: py4j==0.10.9.7 in /opt/anaconda3/lib/python3.9/site-packages (from pyspark) (0.10.9.7)\n"
     ]
    }
   ],
   "source": [
    "!pip install -U pyspark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c6ba1aff",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "pyspark_submit_args = os.environ.get(\"PYSPARK_SUBMIT_ARGS\", \"\")\n",
    "if not \"pyspark-shell\" in pyspark_submit_args: pyspark_submit_args += \" pyspark-shell\"\n",
    "os.environ[\"PYSPARK_SUBMIT_ARGS\"] = pyspark_submit_args\n",
    "spark_home = os.environ.get(\"SPARK_HOME\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "becf6f74",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting default log level to \"WARN\".\n",
      "To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n",
      "23/04/28 19:50:55 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n"
     ]
    }
   ],
   "source": [
    "from pyspark.conf import SparkConf\n",
    "from pyspark import SparkContext\n",
    "from pyspark.sql import SQLContext\n",
    "\n",
    "# sc.stop()\n",
    "sc = SparkContext() \n",
    "config = sc.getConf()\n",
    "config.set('spark.cores.max','4')\n",
    "config.set('spark.executor.memory', '8G')\n",
    "config.set('spark.driver.maxResultSize', '8g')\n",
    "config.set('spark.kryoserializer.buffer.max', '512m')\n",
    "config.set(\"spark.driver.cores\", \"4\")\n",
    "\n",
    "sc.stop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f2e8b2b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using Apache Spark Version 3.4.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.9/site-packages/pyspark/sql/context.py:112: FutureWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "sc = SparkContext(conf = config) \n",
    "sqlContext = SQLContext(sc)\n",
    "print(\"Using Apache Spark Version\", sc.version)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44845ea5",
   "metadata": {},
   "source": [
    "#### **Read CSV file into Spark DataFrame**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0702f53d",
   "metadata": {},
   "outputs": [],
   "source": [
    "cb_file = \"metadata.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "82274658",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                \r"
     ]
    },
    {
     "data": {
      "text/plain": [
       "1056660"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sdf = sqlContext.read.format(\"csv\") \\\n",
    "                        .options(header='true', inferschema='true', treatEmptyValuesAsNulls='true') \\\n",
    "                        .load(cb_file)\n",
    "sdf.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cee156a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_columns = [sdf.columns[i-1] for i in [1, 3, 4, 9, 10, 11, 12, 18]]\n",
    "sdf_filtered = sdf.select(selected_columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "551abf7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------+--------+--------------------+--------------------+------------+--------------------+--------------------+--------------------+\n",
      "|cord_uid|source_x|               title|            abstract|publish_time|             authors|             journal|                 url|\n",
      "+--------+--------+--------------------+--------------------+------------+--------------------+--------------------+--------------------+\n",
      "|ug7v899j|     PMC|Clinical features...|OBJECTIVE: This r...|  2001-07-04|Madani, Tariq A; ...|      BMC Infect Dis|https://www.ncbi....|\n",
      "|02tnwd4m|     PMC|Nitric oxide: a p...|Inflammatory dise...|  2000-08-15|Vliet, Albert van...|          Respir Res|https://www.ncbi....|\n",
      "|ejv2xln0|     PMC|Surfactant protei...|Surfactant protei...|  2000-08-25|     Crouch, Erika C|          Respir Res|https://www.ncbi....|\n",
      "|2b73a28n|     PMC|Role of endotheli...|Endothelin-1 (ET-...|  2001-02-22|Fagan, Karen A; M...|          Respir Res|https://www.ncbi....|\n",
      "|9785vg6d|     PMC|Gene expression i...|Respiratory syncy...|  2001-05-11|Domachowske, Jose...|          Respir Res|https://www.ncbi....|\n",
      "|zjufx4fo|     PMC|Sequence requirem...|Nidovirus subgeno...|  2001-12-17|Pasternak, Alexan...|    The EMBO Journal|http://europepmc....|\n",
      "|5yhe786e|     PMC|Debate: Transfusi...|Recent evidence s...|  2001-03-08|Alvarez, Gonzalo;...|           Crit Care|https://www.ncbi....|\n",
      "|8zchiykl|     PMC|The 21st Internat...|The 21st Internat...|  2001-05-02|Ball, Jonathan; V...|           Crit Care|https://www.ncbi....|\n",
      "|8qnrcgnk|     PMC|Heme oxygenase-1 ...|Heme oxygenase-1 ...|  2003-08-07|Slebos, Dirk-Jan;...|          Respir Res|https://www.ncbi....|\n",
      "|jg13scgo|     PMC|Technical Descrip...|This report descr...|  2003-09-01|Tsui, Fu-Chiang; ...|Journal of the Am...|https://academic....|\n",
      "+--------+--------+--------------------+--------------------+------------+--------------------+--------------------+--------------------+\n",
      "only showing top 10 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "sdf_filtered.show(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "853a692f",
   "metadata": {},
   "outputs": [],
   "source": [
    "sdf_clean = sdf_filtered.na.drop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "cae0a8a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                \r"
     ]
    },
    {
     "data": {
      "text/plain": [
       "509210"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sdf_clean.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4f59c999",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "root\n",
      " |-- cord_uid: string (nullable = true)\n",
      " |-- source_x: string (nullable = true)\n",
      " |-- title: string (nullable = true)\n",
      " |-- abstract: string (nullable = true)\n",
      " |-- publish_time: string (nullable = true)\n",
      " |-- authors: string (nullable = true)\n",
      " |-- journal: string (nullable = true)\n",
      " |-- url: string (nullable = true)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# check data schema\n",
    "sdf_clean.printSchema()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3306098a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                \r"
     ]
    }
   ],
   "source": [
    "sdf_clean.write.json(\"metadata_clean.json\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "14fc9075",
   "metadata": {},
   "outputs": [],
   "source": [
    "# spark.stop()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26846278",
   "metadata": {},
   "source": [
    "### **MongoDB**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e49101e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pymongo import MongoClient\n",
    "\n",
    "# connect to mongoDB\n",
    "client = MongoClient('localhost',27017)\n",
    "db = client.project\n",
    "collection = db.metadata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6af2532d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "import glob\n",
    "\n",
    "json_files = glob.glob(\"metadata_clean.json/part-*.json\")\n",
    "\n",
    "# Read and insert data from each JSON file\n",
    "for json_file in json_files:\n",
    "    with open(json_file, \"r\") as file:\n",
    "        data = [json.loads(line) for line in file]\n",
    "        collection.insert_many(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7f3ad837",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1018420"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "collection.count_documents({})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c45d718e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# collection.drop()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08f0be58",
   "metadata": {},
   "source": [
    "#### **By Title Function**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c172cf41",
   "metadata": {},
   "outputs": [],
   "source": [
    "def details(title):\n",
    "    # Search for records containing the input string in the title field\n",
    "    query_title = {\"title\": {\"$regex\": title, \"$options\": \"i\"}}\n",
    "    cursor_title = collection.find(query_title)\n",
    "\n",
    "    # Convert the cursor to a Pandas DataFrame\n",
    "    records_title = list(cursor_title)\n",
    "    df_title = pd.DataFrame(records_title)\n",
    "\n",
    "    # Filter the DataFrame to include only the desired columns\n",
    "    columns_title = [\"cord_uid\", \"source_x\", \"title\", \"abstract\", \"publish_time\", \"authors\", \"journal\"]\n",
    "    df_title = df_title[columns_title]\n",
    "\n",
    "    return df_title"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "baee6ed7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        cord_uid source_x                                              title  \\\n",
      "0       fyorl3ks      WHO  Sports Students' Satisfaction with Their Forei...   \n",
      "1       cogrn31y      WHO  Minor Clinical Impact of COVID-19 Pandemic on ...   \n",
      "2       kobwu7vg      WHO  COVCOG 1: Factors predicting Cognitive Symptom...   \n",
      "3       qgbtjyj2    ArXiv  C-Watcher: A Framework for Early Detection of ...   \n",
      "4       pfgyz697      WHO  The COVID-19 Infodemic: A Quantitative Analysi...   \n",
      "...          ...      ...                                                ...   \n",
      "174179  sbaucmn6      WHO  Addressing the global surge of COVID-19 cases:...   \n",
      "174180  uywwa5zf      WHO  [Practice of urological departments during the...   \n",
      "174181  rof1c4va      WHO  Maladie de Kawasaki de l'adulte post-COVID 19 ...   \n",
      "174182  4bowti05      WHO  IoT role in prevention of COVID-19 and health ...   \n",
      "174183  4ct2vb3e      WHO  Clinical and radiologic features of the first ...   \n",
      "\n",
      "                                                 abstract  \\\n",
      "0       \"Satisfaction is one of the major factors for ...   \n",
      "1       \"In the last few months the world has witnesse...   \n",
      "2       \"Since its first emergence in December 2019, c...   \n",
      "3       \"The novel coronavirus disease (COVID-19) has ...   \n",
      "4       \"Background Social media is a crucial part of ...   \n",
      "...                                                   ...   \n",
      "174179  \"Background and aim: As the rage of coronaviru...   \n",
      "174180  \"INTRODUCTION: The pandemic of novel coronavir...   \n",
      "174181  \"Le syndrome d'inflammation multisystémique as...   \n",
      "174182  \"Purpose This paper aims to address the role o...   \n",
      "174183  \"To determine changes in clinical and radiolog...   \n",
      "\n",
      "                                             publish_time  \\\n",
      "0        Sofia in the period 2018 - 2020 The analysis ...   \n",
      "1        from mid-February to mid-May and the second f...   \n",
      "2                                       part longitudinal   \n",
      "3                   even before any confirmed cases known   \n",
      "4                                                 Redmond   \n",
      "...                                                   ...   \n",
      "174179                                            NIH.gov   \n",
      "174180   Novosibirsk) and community (KGBUZ \"\"City Clin...   \n",
      "174181   a été décrit très tôt après le début de l'épi...   \n",
      "174182  \"\" which may totally change the practices univ...   \n",
      "174183   2020. COVID-19 was laboratory confirmed by re...   \n",
      "\n",
      "                                                  authors  \\\n",
      "0                                                     108   \n",
      "1                               aged 4 months to 60 years   \n",
      "2        study documenting and aiming to understand th...   \n",
      "3        in the target city. We carried out extensive ...   \n",
      "4        WA). Descriptive statistical analysis of Face...   \n",
      "...                                                   ...   \n",
      "174179                                             PubMed   \n",
      "174180   Barnaul\"\") hospitals;GBUZ of the Novosibirsk ...   \n",
      "174181  4 cas/million d'habitant. La moitié des patien...   \n",
      "174182   even its quality administrations in this extr...   \n",
      "174183    and she received conventional antiviral therapy   \n",
      "\n",
      "                                                  journal  \n",
      "0        p= 035) and the overall satisfaction they got...  \n",
      "1                     were tested positive for SARS-CoV-2  \n",
      "2        we document the characteristics of our sample...  \n",
      "3        where the results demonstrate the efficiency ...  \n",
      "4                                                  Armonk  \n",
      "...                                                   ...  \n",
      "174179                                           Scinapse  \n",
      "174180                               Novosibirsk) clinics  \n",
      "174181   mais pas chez l'adulte de plus de 21 ans. En ...  \n",
      "174182   as the computerized revolution would place cu...  \n",
      "174183                               such as moxifloxacin  \n",
      "\n",
      "[174184 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "result_df = details(\"covid\")\n",
    "print(result_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac3c199d",
   "metadata": {},
   "source": [
    "#### **By Author Function**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "74145c85",
   "metadata": {},
   "outputs": [],
   "source": [
    "def details(authors):\n",
    "    # Search for records containing the input string in the title field\n",
    "    query_authors = {\"authors\": {\"$regex\": authors, \"$options\": \"i\"}}\n",
    "    cursor_authors = collection.find(query_authors)\n",
    "\n",
    "    # Convert the cursor to a Pandas DataFrame\n",
    "    records_authors = list(cursor_authors)\n",
    "    df_authors = pd.DataFrame(records_authors)\n",
    "\n",
    "    # Filter the DataFrame to include only the desired columns\n",
    "    columns_authors = [\"cord_uid\", \"source_x\", \"title\", \"abstract\", \"publish_time\", \"authors\", \"journal\"]\n",
    "    df_authors = df_authors[columns_authors]\n",
    "\n",
    "    return df_authors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d5df194c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       cord_uid source_x                                              title  \\\n",
      "0      nek2ctqy      WHO               Digital Contact Tracing for Covid 19   \n",
      "1      vwd6tho6    ArXiv               Digital Contact Tracing for Covid 19   \n",
      "2      vt48ah4r      WHO  Teledentistry Protocol for Patient Assistance ...   \n",
      "3      937303jy      WHO  Organizational challenges and oncological acti...   \n",
      "4      7zje6wq1      WHO  [Diagnosztikus lépések és a betegség prognózis...   \n",
      "...         ...      ...                                                ...   \n",
      "20724  g4h3zi8l      WHO  \"Impact of the COVID-19 pandemic on orthopedic...   \n",
      "20725  g4h3zi8l      WHO  \"Impact of the COVID-19 pandemic on orthopedic...   \n",
      "20726  ejy6v0uz    ArXiv  TURINGBENCH: A Benchmark Environment for Turin...   \n",
      "20727  t612lxb1      WHO  Longitudinal and cross-sectional detection of ...   \n",
      "20728  6twxq5k0      WHO  Pay to skip the line: The political economy of...   \n",
      "\n",
      "                                                abstract  \\\n",
      "0      \"The COVID19 pandemic created a worldwide emer...   \n",
      "1      \"The COVID19 pandemic created a worldwide emer...   \n",
      "2      \"RESUMEN: En el contexto de cuarentena debido ...   \n",
      "3      \"Background: On February 23rd the first case o...   \n",
      "4      \"In December 2019, a cluster of pneumonia case...   \n",
      "...                                                  ...   \n",
      "20724  \"Background and purpose - The COVID-19 pandemi...   \n",
      "20725  \"Background and purpose - The COVID-19 pandemi...   \n",
      "20726  \"Recent progress in generative language models...   \n",
      "20727  \"It can be judged that if the detection freque...   \n",
      "20728  \"The value of digital healthcare has been laud...   \n",
      "\n",
      "                                            publish_time  \\\n",
      "0       which amount to d meter in latitude(longitude...   \n",
      "1       which amount to d meter in latitude(longitude...   \n",
      "2       aplicado a un protocolo de teleodontología. P...   \n",
      "3       resulting in an overall 40% and 43% reduction...   \n",
      "4       the World Health Organization (WHO) declared ...   \n",
      "...                                                  ...   \n",
      "20724   operative and anesthetic casemix for the firs...   \n",
      "20725   operative and anesthetic casemix for the firs...   \n",
      "20726   we present the TuringBench benchmark environment   \n",
      "20727   20 calves were selected and sampled weekly fo...   \n",
      "20728   private lab corporations compete for fee-for-...   \n",
      "\n",
      "                                                 authors  \\\n",
      "0       two users who are within d meter range will m...   \n",
      "1       two users who are within d meter range will m...   \n",
      "2          usamos la metodología de investigación-acción   \n",
      "3       respectively As compared with the same trimes...   \n",
      "4       we focus mainly on the diagnostic issues of C...   \n",
      "...                                                  ...   \n",
      "20724   2020. We compared the data with the same peri...   \n",
      "20725   2020. We compared the data with the same peri...   \n",
      "20726   which is comprised of (1) a dataset with 200K...   \n",
      "20727   10 calves were selected and sampled for five ...   \n",
      "20728   which in turn organises opportunities for mar...   \n",
      "\n",
      "                                                 journal  \n",
      "0         by mapping assisted GPS locations every t mins  \n",
      "1         by mapping assisted GPS locations every t mins  \n",
      "2       un ciclo de autoreflexión frente al problema ...  \n",
      "3       the overall reduction in total numbers of inp...  \n",
      "4       we emphasize the importance and the potential...  \n",
      "...                                                  ...  \n",
      "20724                               risk and odds ratios  \n",
      "20725                               risk and odds ratios  \n",
      "20726                                              GPT-1  \n",
      "20727   88 calves were sampled once. The screening on...  \n",
      "20728   we also found that some infectious disease sp...  \n",
      "\n",
      "[20729 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "df_authors = details(\"Sam\")\n",
    "print(df_authors)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ecead5c",
   "metadata": {},
   "source": [
    "#### **By Source Function**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "cb450a9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def details(source):\n",
    "    # Search for records containing the input string in the title field\n",
    "    query_source = {\"source_x\": {\"$regex\": source, \"$options\": \"i\"}}\n",
    "    cursor_source = collection.find(query_source)\n",
    "\n",
    "    # Convert the cursor to a Pandas DataFrame\n",
    "    records_source = list(cursor_source)\n",
    "    df_source = pd.DataFrame(records_source)\n",
    "\n",
    "    # Filter the DataFrame to include only the desired columns\n",
    "    columns_source = [\"cord_uid\", \"source_x\", \"title\", \"abstract\", \"publish_time\", \"authors\", \"journal\"]\n",
    "    df_source = df_source[columns_source]\n",
    "\n",
    "    return df_source"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bba9debb",
   "metadata": {},
   "source": [
    "#### **By Journal Function**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "1663887e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def details(journal):\n",
    "    # Search for records containing the input string in the title field\n",
    "    query_journal = {\"journal\": {\"$regex\": journal, \"$options\": \"i\"}}\n",
    "    cursor_journal = collection.find(query_journal)\n",
    "\n",
    "    # Convert the cursor to a Pandas DataFrame\n",
    "    records_journal = list(cursor_journal)\n",
    "    df_journal = pd.DataFrame(records_journal)\n",
    "\n",
    "    # Filter the DataFrame to include only the desired columns\n",
    "    columns_journal = [\"cord_uid\", \"source_x\", \"title\", \"abstract\", \"publish_time\", \"authors\", \"journal\"]\n",
    "    df_journal = df_journal[columns_journal]\n",
    "\n",
    "    return df_journal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "1fc51ba0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      cord_uid           source_x  \\\n",
      "0     1nl29xrg  Medline; PMC; WHO   \n",
      "1     7shw6xht       Medline; PMC   \n",
      "2     vl1gadl9       Medline; PMC   \n",
      "3     pqbc0dug       Medline; PMC   \n",
      "4     ih09zi80       Medline; PMC   \n",
      "...        ...                ...   \n",
      "9289  s9iugbtv            Medline   \n",
      "9290  iwhcul3u            Medline   \n",
      "9291  8ojypu4m            Medline   \n",
      "9292  saol972y            Medline   \n",
      "9293  20x021ym            Medline   \n",
      "\n",
      "                                                  title  \\\n",
      "0     Toward finding the difference between untreate...   \n",
      "1     COVID-19 infection control measures and outcom...   \n",
      "2     Effective public health measures to mitigate t...   \n",
      "3     The impact of the COVID-19 pandemic on final y...   \n",
      "4     The experiences, needs and barriers of people ...   \n",
      "...                                                 ...   \n",
      "9289  Reliability, validity and psychometric propert...   \n",
      "9290  The link between thyroid autoimmunity (antithy...   \n",
      "9291  The safety and efficacy of high versus low van...   \n",
      "9292  War-related psychological sequelae among emerg...   \n",
      "9293  The Greek translation of the symptoms rating s...   \n",
      "\n",
      "                                               abstract publish_time  \\\n",
      "0     BACKGROUND: Coronavirus disease 2019 (COVID-19...   2021-12-11   \n",
      "1     BACKGROUND: Emory Dialysis serves an urban and...   2021-03-06   \n",
      "2     BACKGROUND: In December 2019, a novel coronavi...   2021-05-29   \n",
      "3     BACKGROUND: The coronavirus disease (COVID-19)...   2020-06-29   \n",
      "4     OBJECTIVE: Globally, the number of digital hea...   2022-01-06   \n",
      "...                                                 ...          ...   \n",
      "9289  INTRODUCTION The current study aimed to assess...         2001   \n",
      "9290  BACKGROUND To evaluate the association between...         2004   \n",
      "9291  BACKGROUND Recent guidelines have recommended ...         2016   \n",
      "9292  BACKGROUND Residents of the Republic of Serbia...         2004   \n",
      "9293  BACKGROUND The aim of the current study was to...         2003   \n",
      "\n",
      "                                                authors             journal  \n",
      "0     Asri, Nastaran; Nazemalhosseini Mojarad, Ehsan...   BMC Gastroenterol  \n",
      "1     Apata, Ibironke W.; Cobb, Jason; Navarrete, Jo...         BMC Nephrol  \n",
      "2     Ayouni, Imen; Maatoug, Jihen; Dhouib, Wafa; Za...   BMC Public Health  \n",
      "3     Choi, Byung; Jegatheeswaran, Lavandan; Minocha...        BMC Med Educ  \n",
      "4     Henni, Silje Havrevold; Maurud, Sigurd; Fugler...   BMC Public Health  \n",
      "...                                                 ...                 ...  \n",
      "9289  Fountoulakis, K N; lacovides, A; Samolis, S; K...      BMC psychiatry  \n",
      "9290  Carta, Mauro Giovanni; Loviselli, Andrea; Hard...      BMC psychiatry  \n",
      "9291              Tongsai, Sasima; Koomanachai, Pornpan  BMC research notes  \n",
      "9292  Nelson, Brett D; Fernandez, William G; Galea, ...        BMC medicine  \n",
      "9293  Fountoulakis, Konstantinos N; Iacovides, Apost...      BMC psychiatry  \n",
      "\n",
      "[9294 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "df_journal = details(\"BMC\")\n",
    "print(df_journal)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d13f276",
   "metadata": {},
   "source": [
    "### **Flask**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c4f7d492",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * Serving Flask app \"__main__\" (lazy loading)\n",
      " * Environment: production\n",
      "\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n",
      "\u001b[2m   Use a production WSGI server instead.\u001b[0m\n",
      " * Debug mode: on\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n",
      " * Restarting with watchdog (fsevents)\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/ipykernel_launcher.py\", line 15, in <module>\n",
      "    from ipykernel import kernelapp as app\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/ipykernel/kernelapp.py\", line 18, in <module>\n",
      "    from IPython.core.application import (\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/IPython/__init__.py\", line 56, in <module>\n",
      "    from .terminal.embed import embed\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/IPython/terminal/embed.py\", line 16, in <module>\n",
      "    from IPython.terminal.interactiveshell import TerminalInteractiveShell\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/IPython/terminal/interactiveshell.py\", line 35, in <module>\n",
      "    from .debugger import TerminalPdb, Pdb\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/IPython/terminal/debugger.py\", line 6, in <module>\n",
      "    from IPython.core.completer import IPCompleter\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/IPython/core/completer.py\", line 146, in <module>\n",
      "    import jedi\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/jedi/__init__.py\", line 32, in <module>\n",
      "    from jedi.api import Script, Interpreter, set_debug_function, preload_module\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/jedi/api/__init__.py\", line 13, in <module>\n",
      "    import parso\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/parso/__init__.py\", line 42, in <module>\n",
      "    from parso.grammar import Grammar, load_grammar\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/parso/grammar.py\", line 13, in <module>\n",
      "    from parso.cache import parser_cache, load_module, try_to_save_module\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/parso/cache.py\", line 76, in <module>\n",
      "    _default_cache_path = _get_default_cache_path()\n",
      "  File \"/opt/anaconda3/lib/python3.9/site-packages/parso/cache.py\", line 73, in _get_default_cache_path\n",
      "    return dir_.expanduser()\n",
      "AttributeError: 'PosixPath' object has no attribute 'expanduser'\n"
     ]
    },
    {
     "ename": "SystemExit",
     "evalue": "1",
     "output_type": "error",
     "traceback": [
      "An exception has occurred, use %tb to see the full traceback.\n",
      "\u001b[0;31mSystemExit\u001b[0m\u001b[0;31m:\u001b[0m 1\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.9/site-packages/IPython/core/interactiveshell.py:3465: UserWarning: To exit: use 'exit', 'quit', or Ctrl-D.\n",
      "  warn(\"To exit: use 'exit', 'quit', or Ctrl-D.\", stacklevel=1)\n"
     ]
    }
   ],
   "source": [
    "from flask import Flask, request, jsonify, render_template\n",
    "import pandas as pd\n",
    "from pymongo import MongoClient\n",
    "\n",
    "app = Flask(__name__)\n",
    "\n",
    "client = MongoClient('localhost', 27017)\n",
    "db = client.project\n",
    "collection = db.metadata\n",
    "\n",
    "def details(query_field, query_value):\n",
    "    query = {query_field: {\"$regex\": query_value, \"$options\": \"i\"}}\n",
    "    cursor = collection.find(query)\n",
    "    records = list(cursor)\n",
    "    df = pd.DataFrame(records)\n",
    "\n",
    "    columns = [\"cord_uid\", \"source_x\", \"title\", \"abstract\", \"publish_time\", \"authors\", \"journal\"]\n",
    "    df = df[columns]\n",
    "\n",
    "    return df\n",
    "\n",
    "@app.route('/')\n",
    "def index():\n",
    "    return render_template('index.html')\n",
    "\n",
    "@app.route('/search/title', methods=['GET'])\n",
    "def search_title():\n",
    "    title = request.args.get('title', '')\n",
    "    df_title = details(\"title\", title)\n",
    "    return jsonify(df_title.to_dict(orient='records'))\n",
    "\n",
    "@app.route('/search/authors', methods=['GET'])\n",
    "def search_authors():\n",
    "    authors = request.args.get('authors', '')\n",
    "    df_authors = details(\"authors\", authors)\n",
    "    return jsonify(df_authors.to_dict(orient='records'))\n",
    "\n",
    "@app.route('/search/source', methods=['GET'])\n",
    "def search_source():\n",
    "    source = request.args.get('source', '')\n",
    "    df_source = details(\"source_x\", source)\n",
    "    return jsonify(df_source.to_dict(orient='records'))\n",
    "\n",
    "@app.route('/search/journal', methods=['GET'])\n",
    "def search_journal():\n",
    "    journal = request.args.get('journal', '')\n",
    "    df_journal = details(\"journal\", journal)\n",
    "    return jsonify(df_journal.to_dict(orient='records'))\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    app.run(debug=True)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
